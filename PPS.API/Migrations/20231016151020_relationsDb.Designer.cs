// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PPS.API.Data;

#nullable disable

namespace PPS.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231016151020_relationsDb")]
    partial class relationsDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PPS.Shared.Entities.EstadoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Estado")
                        .IsUnique();

                    b.ToTable("estadoServicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.EstadoServicio_Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoServicioId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoServicioId");

                    b.HasIndex("ServicioId");

                    b.ToTable("EstadoServicio_Servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Linea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("lineas");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Linea_Vehiculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("LineaId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("LineaId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Linea_Vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Liquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Egreso")
                        .HasColumnType("int");

                    b.Property<int>("Facturar")
                        .HasColumnType("int");

                    b.Property<int>("Ingreso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Facturar")
                        .IsUnique();

                    b.ToTable("liquidacions");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Liquidacion_Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LiquidacionId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LiquidacionId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Liquidacion_Servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Lugar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("lugars");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Marca_Vehiculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Marca_Vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Recorrido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("valor")
                        .IsUnique();

                    b.ToTable("recorridos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Recorrido_Servicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("RecorridoId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("RecorridoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Recorrido_Servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroServicio")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NumeroServicio")
                        .IsUnique();

                    b.ToTable("servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.TipoCarroceria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("tipoCarrocerias");
                });

            modelBuilder.Entity("PPS.Shared.Entities.TipoCarroceria_Vehiculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("TipoCarroceriaId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("TipoCarroceriaId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("TipoCarroceria_Vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Transito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("transitos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Transito_Vehiculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("TranditoId")
                        .HasColumnType("int");

                    b.Property<int>("TransitoId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("TransitoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Transito_Vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Cilindraje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroChasis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroMotor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("placa")
                        .IsUnique();

                    b.ToTable("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo_Servicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ServicioId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Vehiculo_Servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.EstadoServicio_Servicio", b =>
                {
                    b.HasOne("PPS.Shared.Entities.EstadoServicio", "estadoServicio")
                        .WithMany("estadoServicio_Servicios")
                        .HasForeignKey("EstadoServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Servicio", "servicio")
                        .WithMany("estadoServicio_Servicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("estadoServicio");

                    b.Navigation("servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Linea_Vehiculo", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Linea", "linea")
                        .WithMany("linea_Vehiculos")
                        .HasForeignKey("LineaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Vehiculo", "vehiculo")
                        .WithMany("linea_Vehiculos")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("linea");

                    b.Navigation("vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Liquidacion_Servicio", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Liquidacion", "liquidacion")
                        .WithMany("liquidacion_Servicios")
                        .HasForeignKey("LiquidacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Servicio", "servicio")
                        .WithMany("liquidacion_Servicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("liquidacion");

                    b.Navigation("servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Marca_Vehiculo", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Marca", "marca")
                        .WithMany("marca_Vehiculos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Vehiculo", "vehiculo")
                        .WithMany("marca_Vehiculos")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marca");

                    b.Navigation("vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Recorrido_Servicio", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Recorrido", "recorrido")
                        .WithMany("recorrido_Servicios")
                        .HasForeignKey("RecorridoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Servicio", "servicio")
                        .WithMany("recorrido_Servicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("recorrido");

                    b.Navigation("servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.TipoCarroceria_Vehiculo", b =>
                {
                    b.HasOne("PPS.Shared.Entities.TipoCarroceria", "tipoCarroceria")
                        .WithMany("tipoCarroceria_Vehiculos")
                        .HasForeignKey("TipoCarroceriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Vehiculo", "vehiculo")
                        .WithMany("tipoCarroceria_Vehiculos")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoCarroceria");

                    b.Navigation("vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Transito_Vehiculo", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Transito", "Transito")
                        .WithMany("transito_Vehiculos")
                        .HasForeignKey("TransitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Vehiculo", "Vehiculo")
                        .WithMany("transito_Vehiculos")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transito");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo_Servicio", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Servicio", "servicio")
                        .WithMany("vehiculo_Servicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Vehiculo", "vehiculo")
                        .WithMany("vehiculo_Servicios")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("servicio");

                    b.Navigation("vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.EstadoServicio", b =>
                {
                    b.Navigation("estadoServicio_Servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Linea", b =>
                {
                    b.Navigation("linea_Vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Liquidacion", b =>
                {
                    b.Navigation("liquidacion_Servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Marca", b =>
                {
                    b.Navigation("marca_Vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Recorrido", b =>
                {
                    b.Navigation("recorrido_Servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Servicio", b =>
                {
                    b.Navigation("estadoServicio_Servicios");

                    b.Navigation("liquidacion_Servicios");

                    b.Navigation("recorrido_Servicios");

                    b.Navigation("vehiculo_Servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.TipoCarroceria", b =>
                {
                    b.Navigation("tipoCarroceria_Vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Transito", b =>
                {
                    b.Navigation("transito_Vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo", b =>
                {
                    b.Navigation("linea_Vehiculos");

                    b.Navigation("marca_Vehiculos");

                    b.Navigation("tipoCarroceria_Vehiculos");

                    b.Navigation("transito_Vehiculos");

                    b.Navigation("vehiculo_Servicios");
                });
#pragma warning restore 612, 618
        }
    }
}
