// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PPS.API.Data;

#nullable disable

namespace PPS.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231020091341_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PPS.Shared.Entities.EstadoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Estado")
                        .IsUnique();

                    b.ToTable("estadoServicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Linea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("lineas");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Liquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Valor")
                        .IsUnique();

                    b.ToTable("liquidacions");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Recorrido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("valor")
                        .IsUnique();

                    b.ToTable("recorridos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoServicioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstadoServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdLiquidacion")
                        .HasColumnType("int");

                    b.Property<int>("IdRecorrido")
                        .HasColumnType("int");

                    b.Property<int>("LiquidacionId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroServicio")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("recorridoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoServicioId");

                    b.HasIndex("LiquidacionId");

                    b.HasIndex("NumeroServicio")
                        .IsUnique();

                    b.HasIndex("recorridoId");

                    b.ToTable("servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.TipoCarroceria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("tipoCarrocerias");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Transito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("transitos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Cilindraje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdLinea")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoCarroceria")
                        .HasColumnType("int");

                    b.Property<int>("IdTransito")
                        .HasColumnType("int");

                    b.Property<string>("NumeroChasis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroMotor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCarroceriaId")
                        .HasColumnType("int");

                    b.Property<int>("TransitoId")
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lineaId")
                        .HasColumnType("int");

                    b.Property<int>("marcaId")
                        .HasColumnType("int");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TipoCarroceriaId");

                    b.HasIndex("TransitoId");

                    b.HasIndex("lineaId");

                    b.HasIndex("marcaId");

                    b.HasIndex("placa")
                        .IsUnique();

                    b.ToTable("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo_Servicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("IdServicioId")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("IdServicioId");

                    b.HasIndex("IdVehiculoId");

                    b.ToTable("Vehiculo_Servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Servicio", b =>
                {
                    b.HasOne("PPS.Shared.Entities.EstadoServicio", "EstadoServicio")
                        .WithMany("servicios")
                        .HasForeignKey("EstadoServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Liquidacion", "Liquidacion")
                        .WithMany("servicios")
                        .HasForeignKey("LiquidacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Recorrido", "recorrido")
                        .WithMany("servicios")
                        .HasForeignKey("recorridoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoServicio");

                    b.Navigation("Liquidacion");

                    b.Navigation("recorrido");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo", b =>
                {
                    b.HasOne("PPS.Shared.Entities.TipoCarroceria", "TipoCarroceria")
                        .WithMany("vehiculos")
                        .HasForeignKey("TipoCarroceriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Transito", "Transito")
                        .WithMany("vehiculos")
                        .HasForeignKey("TransitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Linea", "linea")
                        .WithMany("vehiculos")
                        .HasForeignKey("lineaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Marca", "marca")
                        .WithMany("vehiculos")
                        .HasForeignKey("marcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCarroceria");

                    b.Navigation("Transito");

                    b.Navigation("linea");

                    b.Navigation("marca");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo_Servicio", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Servicio", "IdServicio")
                        .WithMany("vehiculo_Servicios")
                        .HasForeignKey("IdServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPS.Shared.Entities.Vehiculo", "IdVehiculo")
                        .WithMany("vehiculo_Servicios")
                        .HasForeignKey("IdVehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdServicio");

                    b.Navigation("IdVehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.EstadoServicio", b =>
                {
                    b.Navigation("servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Linea", b =>
                {
                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Liquidacion", b =>
                {
                    b.Navigation("servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Marca", b =>
                {
                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Recorrido", b =>
                {
                    b.Navigation("servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Servicio", b =>
                {
                    b.Navigation("vehiculo_Servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.TipoCarroceria", b =>
                {
                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Transito", b =>
                {
                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo", b =>
                {
                    b.Navigation("vehiculo_Servicios");
                });
#pragma warning restore 612, 618
        }
    }
}
