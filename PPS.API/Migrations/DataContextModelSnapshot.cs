// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PPS.API.Data;

#nullable disable

namespace PPS.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PPS.Shared.Entities.EstadoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Estado")
                        .IsUnique();

                    b.HasIndex("ServicioId");

                    b.ToTable("EstadoServicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Linea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Lineas");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Liquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServicioId");

                    b.HasIndex("Valor")
                        .IsUnique();

                    b.ToTable("Liquidacions");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Recorrido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Recorridos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRecorrido")
                        .HasColumnType("int");

                    b.Property<int>("NumeroServicio")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecorridoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumeroServicio")
                        .IsUnique();

                    b.HasIndex("RecorridoId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.TipoCarroceria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TipoCarrocerias");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Transito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Transitos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Cilindraje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdLinea")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoCarroceria")
                        .HasColumnType("int");

                    b.Property<int>("IdTransito")
                        .HasColumnType("int");

                    b.Property<string>("NumeroChasis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroMotor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoCarroceriaId")
                        .HasColumnType("int");

                    b.Property<int?>("TransitoId")
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("lineaId")
                        .HasColumnType("int");

                    b.Property<int?>("marcaId")
                        .HasColumnType("int");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TipoCarroceriaId");

                    b.HasIndex("TransitoId");

                    b.HasIndex("lineaId");

                    b.HasIndex("marcaId");

                    b.HasIndex("placa")
                        .IsUnique();

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo_Servicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int?>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ServicioId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Vehiculo_Servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.EstadoServicio", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Servicio", "Servicio")
                        .WithMany("EstadoServicios")
                        .HasForeignKey("ServicioId");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Liquidacion", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Servicio", "Servicio")
                        .WithMany("Liquidacions")
                        .HasForeignKey("ServicioId");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Servicio", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Recorrido", "Recorrido")
                        .WithMany("servicios")
                        .HasForeignKey("RecorridoId");

                    b.Navigation("Recorrido");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo", b =>
                {
                    b.HasOne("PPS.Shared.Entities.TipoCarroceria", "TipoCarroceria")
                        .WithMany("vehiculos")
                        .HasForeignKey("TipoCarroceriaId");

                    b.HasOne("PPS.Shared.Entities.Transito", "Transito")
                        .WithMany("vehiculos")
                        .HasForeignKey("TransitoId");

                    b.HasOne("PPS.Shared.Entities.Linea", "linea")
                        .WithMany("vehiculos")
                        .HasForeignKey("lineaId");

                    b.HasOne("PPS.Shared.Entities.Marca", "marca")
                        .WithMany("vehiculos")
                        .HasForeignKey("marcaId");

                    b.Navigation("TipoCarroceria");

                    b.Navigation("Transito");

                    b.Navigation("linea");

                    b.Navigation("marca");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo_Servicio", b =>
                {
                    b.HasOne("PPS.Shared.Entities.Servicio", "Servicio")
                        .WithMany("vehiculo_Servicios")
                        .HasForeignKey("ServicioId");

                    b.HasOne("PPS.Shared.Entities.Vehiculo", "Vehiculo")
                        .WithMany("vehiculo_Servicios")
                        .HasForeignKey("VehiculoId");

                    b.Navigation("Servicio");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Linea", b =>
                {
                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Marca", b =>
                {
                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Recorrido", b =>
                {
                    b.Navigation("servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Servicio", b =>
                {
                    b.Navigation("EstadoServicios");

                    b.Navigation("Liquidacions");

                    b.Navigation("vehiculo_Servicios");
                });

            modelBuilder.Entity("PPS.Shared.Entities.TipoCarroceria", b =>
                {
                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Transito", b =>
                {
                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("PPS.Shared.Entities.Vehiculo", b =>
                {
                    b.Navigation("vehiculo_Servicios");
                });
#pragma warning restore 612, 618
        }
    }
}
